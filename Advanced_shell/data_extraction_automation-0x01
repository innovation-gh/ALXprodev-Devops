#!/bin/bash

# Data Extraction Automation - Task 1
# Extracts name, height, weight, and type from Pikachu JSON data

JSON_FILE="data.json"

# Check if data.json exists
if [[ ! -f "$JSON_FILE" ]]; then
    echo "Error: $JSON_FILE not found. Run the API automation script first."
    exit 1
fi

# Check if jq is available
if command -v jq >/dev/null 2>&1; then
    # Extract data using jq
    name=$(jq -r '.name' "$JSON_FILE" | sed 's/^./\u&/')  # Capitalize first letter
    formatted_height=$(jq -r '.height' "$JSON_FILE" | awk '{printf "%.1f", $1/10}')  # m
    formatted_weight=$(jq -r '.weight' "$JSON_FILE" | awk '{printf "%.0f", $1/10}')  # kg
    type=$(jq -r '.types[0].type.name' "$JSON_FILE" | sed 's/^./\u&/')  # Capitalize
else
    # Fallback method if jq is not available
    echo "jq not found, using fallback method..."

    # Extract name
    name=$(grep -o '"name"[[:space:]]*:[[:space:]]*"[^"]*"' "$JSON_FILE" \
        | head -1 \
        | sed 's/.*"name"[[:space:]]*:[[:space:]]*"\([^"]*\)".*/\1/' \
        | sed 's/^./\u&/')

    # Extract and format height
    height_dm=$(grep -o '"height"[[:space:]]*:[[:space:]]*[0-9]*' "$JSON_FILE" \
        | sed 's/.*"height"[[:space:]]*:[[:space:]]*\([0-9]*\).*/\1/')
    formatted_height=$(echo "$height_dm" | awk '{printf "%.1f", $1/10}')

    # Extract and format weight
    weight_hg=$(grep -o '"weight"[[:space:]]*:[[:space:]]*[0-9]*' "$JSON_FILE" \
        | sed 's/.*"weight"[[:space:]]*:[[:space:]]*\([0-9]*\).*/\1/')
    formatted_weight=$(echo "$weight_hg" | awk '{printf "%.0f", $1/10}')

    # Extract type
    type=$(grep -A 10 '"types"' "$JSON_FILE" \
        | grep -o '"name"[[:space:]]*:[[:space:]]*"[^"]*"' \
        | head -1 \
        | sed 's/.*"name"[[:space:]]*:[[:space:]]*"\([^"]*\)".*/\1/' \
        | sed 's/^./\u&/')
fi

# Output in required format
echo "$name is of type $type, weighs ${formatted_weight}kg, and is ${formatted_height}m tall."
